Traceback (most recent call last):
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/victormorales/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
t = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2]

knn = KNeighborsClassifier(n_neighbors = 5)

plt.figure()

for s in t:

    scores = []
    for i in range(1,1000):
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1-s)
        knn.fit(X_train, y_train)
        scores.append(knn.score(X_test, y_test))
    plt.plot(s, np.mean(scores), 'bo')

plt.xlabel('Training set proportion (%)')
plt.ylabel('accuracy');
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[13], line 13[0m
[1;32m     11[0m         X_train, X_test, y_train, y_test [38;5;241m=[39m train_test_split(X, y, test_size [38;5;241m=[39m [38;5;241m1[39m[38;5;241m-[39ms)
[1;32m     12[0m         knn[38;5;241m.[39mfit(X_train, y_train)
[0;32m---> 13[0m         scores[38;5;241m.[39mappend([43mknn[49m[38;5;241;43m.[39;49m[43mscore[49m[43m([49m[43mX_test[49m[43m,[49m[43m [49m[43my_test[49m[43m)[49m)
[1;32m     14[0m     plt[38;5;241m.[39mplot(s, np[38;5;241m.[39mmean(scores), [38;5;124m'[39m[38;5;124mbo[39m[38;5;124m'[39m)
[1;32m     16[0m plt[38;5;241m.[39mxlabel([38;5;124m'[39m[38;5;124mTraining set proportion ([39m[38;5;124m%[39m[38;5;124m)[39m[38;5;124m'[39m)

File [0;32m~/opt/anaconda3/lib/python3.9/site-packages/sklearn/base.py:705[0m, in [0;36mClassifierMixin.score[0;34m(self, X, y, sample_weight)[0m
[1;32m    680[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    681[0m [38;5;124;03mReturn the mean accuracy on the given test data and labels.[39;00m
[1;32m    682[0m 
[0;32m   (...)[0m
[1;32m    701[0m [38;5;124;03m    Mean accuracy of ``self.predict(X)`` w.r.t. `y`.[39;00m
[1;32m    702[0m [38;5;124;03m"""[39;00m
[1;32m    703[0m [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mmetrics[39;00m [38;5;28;01mimport[39;00m accuracy_score
[0;32m--> 705[0m [38;5;28;01mreturn[39;00m accuracy_score(y, [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mpredict[49m[43m([49m[43mX[49m[43m)[49m, sample_weight[38;5;241m=[39msample_weight)

File [0;32m~/opt/anaconda3/lib/python3.9/site-packages/sklearn/neighbors/_classification.py:246[0m, in [0;36mKNeighborsClassifier.predict[0;34m(self, X)[0m
[1;32m    244[0m check_is_fitted([38;5;28mself[39m, [38;5;124m"[39m[38;5;124m_fit_method[39m[38;5;124m"[39m)
[1;32m    245[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mweights [38;5;241m==[39m [38;5;124m"[39m[38;5;124muniform[39m[38;5;124m"[39m:
[0;32m--> 246[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_fit_method [38;5;241m==[39m [38;5;124m"[39m[38;5;124mbrute[39m[38;5;124m"[39m [38;5;129;01mand[39;00m [43mArgKminClassMode[49m[38;5;241;43m.[39;49m[43mis_usable_for[49m[43m([49m
[1;32m    247[0m [43m        [49m[43mX[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fit_X[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmetric[49m
[1;32m    248[0m [43m    [49m[43m)[49m:
[1;32m    249[0m         probabilities [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mpredict_proba(X)
[1;32m    250[0m         [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39moutputs_2d_:

File [0;32m~/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py:471[0m, in [0;36mArgKminClassMode.is_usable_for[0;34m(cls, X, Y, metric)[0m
[1;32m    448[0m [38;5;129m@classmethod[39m
[1;32m    449[0m [38;5;28;01mdef[39;00m [38;5;21mis_usable_for[39m([38;5;28mcls[39m, X, Y, metric) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mbool[39m:
[1;32m    450[0m [38;5;250m    [39m[38;5;124;03m"""Return True if the dispatcher can be used for the given parameters.[39;00m
[1;32m    451[0m 
[1;32m    452[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    468[0m [38;5;124;03m    True if the PairwiseDistancesReduction can be used, else False.[39;00m
[1;32m    469[0m [38;5;124;03m    """[39;00m
[1;32m    470[0m     [38;5;28;01mreturn[39;00m (
[0;32m--> 471[0m         [43mArgKmin[49m[38;5;241;43m.[39;49m[43mis_usable_for[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43mY[49m[43m,[49m[43m [49m[43mmetric[49m[43m)[49m
[1;32m    472[0m         [38;5;66;03m# TODO: Support CSR matrices.[39;00m
[1;32m    473[0m         [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m issparse(X)
[1;32m    474[0m         [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m issparse(Y)
[1;32m    475[0m         [38;5;66;03m# TODO: implement Euclidean specialization with GEMM.[39;00m
[1;32m    476[0m         [38;5;129;01mand[39;00m metric [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m ([38;5;124m"[39m[38;5;124meuclidean[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msqeuclidean[39m[38;5;124m"[39m)
[1;32m    477[0m     )

File [0;32m~/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py:115[0m, in [0;36mBaseDistancesReductionDispatcher.is_usable_for[0;34m(cls, X, Y, metric)[0m
[1;32m    101[0m [38;5;28;01mdef[39;00m [38;5;21mis_valid_sparse_matrix[39m(X):
[1;32m    102[0m     [38;5;28;01mreturn[39;00m (
[1;32m    103[0m         isspmatrix_csr(X)
[1;32m    104[0m         [38;5;129;01mand[39;00m
[0;32m   (...)[0m
[1;32m    110[0m         X[38;5;241m.[39mindices[38;5;241m.[39mdtype [38;5;241m==[39m X[38;5;241m.[39mindptr[38;5;241m.[39mdtype [38;5;241m==[39m np[38;5;241m.[39mint32
[1;32m    111[0m     )
[1;32m    113[0m is_usable [38;5;241m=[39m (
[1;32m    114[0m     get_config()[38;5;241m.[39mget([38;5;124m"[39m[38;5;124menable_cython_pairwise_dist[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m)
[0;32m--> 115[0m     [38;5;129;01mand[39;00m ([43mis_numpy_c_ordered[49m[43m([49m[43mX[49m[43m)[49m [38;5;129;01mor[39;00m is_valid_sparse_matrix(X))
[1;32m    116[0m     [38;5;129;01mand[39;00m (is_numpy_c_ordered(Y) [38;5;129;01mor[39;00m is_valid_sparse_matrix(Y))
[1;32m    117[0m     [38;5;129;01mand[39;00m X[38;5;241m.[39mdtype [38;5;241m==[39m Y[38;5;241m.[39mdtype
[1;32m    118[0m     [38;5;129;01mand[39;00m X[38;5;241m.[39mdtype [38;5;129;01min[39;00m (np[38;5;241m.[39mfloat32, np[38;5;241m.[39mfloat64)
[1;32m    119[0m     [38;5;129;01mand[39;00m metric [38;5;129;01min[39;00m [38;5;28mcls[39m[38;5;241m.[39mvalid_metrics()
[1;32m    120[0m )
[1;32m    122[0m [38;5;28;01mreturn[39;00m is_usable

File [0;32m~/opt/anaconda3/lib/python3.9/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py:99[0m, in [0;36mBaseDistancesReductionDispatcher.is_usable_for.<locals>.is_numpy_c_ordered[0;34m(X)[0m
[1;32m     98[0m [38;5;28;01mdef[39;00m [38;5;21mis_numpy_c_ordered[39m(X):
[0;32m---> 99[0m     [38;5;28;01mreturn[39;00m [38;5;28mhasattr[39m(X, [38;5;124m"[39m[38;5;124mflags[39m[38;5;124m"[39m) [38;5;129;01mand[39;00m [43mX[49m[38;5;241;43m.[39;49m[43mflags[49m[38;5;241;43m.[39;49m[43mc_contiguous[49m

[0;31mAttributeError[0m: 'Flags' object has no attribute 'c_contiguous'

